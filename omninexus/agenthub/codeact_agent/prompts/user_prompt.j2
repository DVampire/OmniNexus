<IMPORTANT>
* You MUST follow the PEP8 standard for the generated python code.
* You MUST follow the directory structure outlined below if you need to generate a research project:
research project                 # Root directory of the project
├── configs                      # Directory for configuration files
│   ├── resnet34.py              # Configuration file for ResNet34 model
├── datasets                     # Directory for datasets (ignored; provided by the user)
├── rp                           # Main package containing core functionality
│   ├── config                   # Subpackage for managing configurations
│   │   ├── __init__.py          # Init file for the config subpackage
│   │   └── config.py            # Configuration setup and parsing logic
│   ├── criterion                # Subpackage for defining loss functions
│   │   ├── __init__.py          # Init file for the criterion subpackage
│   │   └── criterion.py         # Implementation of loss functions
│   ├── data                     # Subpackage for data loading and processing
│   │   ├── __init__.py          # Init file for the data subpackage
│   │   └── dataset.py           # Dataset handling and processing logic
│   ├── logger                   # Subpackage for logging
│   │   ├── __init__.py          # Init file for the logger subpackage
│   │   └── logger.py            # Logging utility implementation
│   ├── metric                   # Subpackage for evaluation metrics
│   │   ├── __init__.py          # Init file for the metric subpackage
│   │   └── metric.py            # Implementation of evaluation metrics
│   ├── model                    # Subpackage for model definitions
│   │   ├── __init__.py          # Init file for the model subpackage
│   │   └── resnet.py            # Implementation of the ResNet model
│   ├── optimizer                # Subpackage for optimizers
│   │   ├── __init__.py          # Init file for the optimizer subpackage
│   │   └── optimizer.py         # Optimizer setup and customization
│   ├── scheduler                # Subpackage for learning rate schedulers
│   │   ├── __init__.py          # Init file for the scheduler subpackage
│   │   └── scheduler.py         # Learning rate scheduler logic
│   ├── trainer                  # Subpackage for training logic
│   │   ├── __init__.py          # Init file for the trainer subpackage
│   │   └── trainer.py           # Implementation of the training loop
│   ├── transform                # Subpackage for data transformations
│   │   ├── __init__.py          # Init file for the transform subpackage
│   │   └── transform.py         # Data transformation logic
│   ├── utils                    # Subpackage for utility functions
│   │   ├── __init__.py          # Init file for the utils subpackage
│   │   └── utils.py             # General-purpose utility functions
│   ├── wandb                    # Subpackage for Weights & Biases (W&B) integration
│   │   ├── __init__.py          # Init file for the wandb subpackage
│   │   └── wandb.py             # W&B logging and integration logic
│   ├── __init__.py              # Init file for the rp package
│   └── registry.py              # Module for registry pattern implementation
├── tests                        # Directory for testing
│   ├── __init__.py              # Init file for the tests directory
│   └── test.py                  # Test cases for the project
└── run.py                       # Main entry point script for running the project
* You MUST first create the necessary directories for the research project (e.g., rp, configs, datasets, tests) before generating the Python scripts.
* You MUST create the necessary Python scripts for each module in the rp package (e.g., __init__.py and model.py in the model directory).
</IMPORTANT>
